### Projeto - Representar Funções ###

- Para declarar uma função o usuário deverá fazer

1 function foo(int parametro cor(10,10,10) tamanho(50,20) posicao(10,10);) : int {int varLocal cor(10,10,10) tamanho(50,20) posicao(60,10);};

em que se diz o nome da função, os parâmetros de entrada, o tipo de retorno (que poderá ser void) e as variáveis locais que poderão ser pré-declaradas. 

- Para iniciar uma função deverá ser dado o comando

2 start foo(parametroPassado);

e apartir de então qualquer variável declarada será desenhada em um subpainel cujo título é 

Função foo(int parametro):int

em que se terá um resumo do nome, parâmetros e saída da função/procedimento.

Obs1: o parametro passado deverá ser uma variável previamente declarada, e seu valor deverá ser copiado para os parametros da função.

Obs2: quando o retorno for void, esse título será chamado de procedimento ao invés de função.

- Para se finalizar uma função, deverá ser dado o comando

3 end;

de modo que com esse comando o subpainel some, junto com qualquer elemento pertencente ao escopo da função.

- Para facilitar a representação de ponteiros como parâmetros de entrada, haverá um comando de inserção de texto, que representará a referência para a variável. Mais detalhes, ver o projeto de ponteiros.

- Para passar uma variável por referência, deverá ser utilizada a palavra chave endereço, como segue

1 function foo(pointer p cor(150,150,255) tamanho(50,20) posicao (20,60);):void;
2 int x cor(150,150,150) tamanho(50,20) posicao (20,20);
3 {start incrementa(endereco x); p aponta(cima,50); insere_texto conteudo("x") tamanho(12) posicao(34,10);}

Repare que o tipo declarado é ponteiro, e o tipo passado é um inteiro, precedido da palavra "endereco" 
